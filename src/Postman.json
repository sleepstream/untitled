{
  "info": {
    "_postman_id": "5ca6fa01-863c-4ce9-86ce-df9656946b34",
    "name": "Antiphish copy",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Antiphish v1",
      "item": [
        {
          "name": "Department",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Department",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7ce847a7-a707-45a0-ae74-3cbeff11d635",
                        "exec": [
                          "//get random department name",
                          "",
                          "var department_name = \"Отдел \";",
                          "var department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        department_name += department_name_charset.charAt(Math.floor(Math.random() * department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"departmentName\", department_name);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "07026a2c-6a4e-48fb-bf0c-c4a979fdb216",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get departmentId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"departmentId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"null\"},",
                          "        \"lastChange\": {\"type\": \"null\"},",
                          "       ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"name\":\"{{departmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/departments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Department after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "19858b12-d3a5-4dfc-a5c9-68eb8f11b1bd",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentSchema = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "            \"id\": {\"type\": \"integer\"},",
                          "            \"name\": {\"type\": \"string\"},",
                          "            \"rating\": {\"type\": \"integer\"},",
                          "            \"lastChange\": {\"type\": \"integer\"},",
                          "            ",
                          "        }   ",
                          "    };",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentSchema);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "",
                          "pm.test(\"Department Name and ID are correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Departments",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7f4809bd-48df-4c8e-b108-184c93cbca83",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "pm.test(\"Department Name and ID are correct and displayed in Department's list.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/departments?page=1&per-page=10000>; rel=self",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self "
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Modify Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "72fc2c24-856a-49eb-a40a-b621b258fa70",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"integer\"},",
                          "        \"lastChange\": {\"type\": \"integer\"},",
                          "        ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedDepartmentName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "bc6bbd38-67fd-409c-b4d3-164c7d117c32",
                        "type": "text/javascript",
                        "exec": [
                          "//get random modified department name",
                          "",
                          "var modified_department_name = \"Отдел номер два с именем \";",
                          "var modified_department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_department_name += modified_department_name_charset.charAt(Math.floor(Math.random() * modified_department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedDepartmentName\", modified_department_name);"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"id\":{{departmentId}},\"name\":\"{{modifiedDepartmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Deleting Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aff59b85-88d8-45eb-8709-64ba3280fc47",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v1/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Target",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "91393d99-2404-4064-b0b8-62e1f24add01",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get targetId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"targetId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"first_name\", \"second_name\", \"email\", \"departmentId\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"first_name\": {\"type\": \"string\"},",
                          "        \"second_name\": {\"type\": \"string\"},",
                          "        \"third_name\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"null\"},",
                          "        \"departmentId\": {\"type\": \"integer\"},",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"null\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"null\"},",
                          "                \"lastChange\": {\"type\": \"null\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "  ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "8dd58800-317c-4d88-ba5d-86a4caef3ef0",
                        "exec": [
                          "//get random first name",
                          "var first_name = \"\";",
                          "var first_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        first_name += first_name_charset.charAt(Math.floor(Math.random() * first_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"firstName\", first_name);",
                          "",
                          "//get random second name",
                          "var second_name = \"\";",
                          "var second_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        second_name += second_name_charset.charAt(Math.floor(Math.random() * second_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"secondName\", second_name);",
                          "",
                          "//get random third name",
                          "var third_name = \"\";",
                          "var third_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        third_name += third_name_charset.charAt(Math.floor(Math.random() * third_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"thirdName\", third_name);",
                          "",
                          "//get random email",
                          "var email_name = \"A.b.C.d\";",
                          "var email_name_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        email_name += email_name_charset.charAt(Math.floor(Math.random() * email_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"email\", email_name);",
                          "",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"first_name\":\"{{firstName}}\",\"second_name\":\"{{secondName}}\",\"third_name\":\"{{thirdName}}\",\"email\":\"{{email}}@antph.me\",\"status\":0,\"departmentId\":{{departmentId}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/targets",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info about Target after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9f234c3b-3eb9-4117-8241-9ce4263204eb",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"first_name\", \"second_name\", \"email\", \"departmentId\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"first_name\": {\"type\": \"string\"},",
                          "        \"second_name\": {\"type\": \"string\"},",
                          "        \"third_name\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        \"departmentId\": {\"type\": \"integer\"},",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"integer\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"integer\"},",
                          "                \"lastChange\": {\"type\": \"integer\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "  ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Targets",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "61b94d08-db68-43e8-817c-91dc16ec391b",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, department, marks",
                          "",
                          "pm.test(\"Target is correct and displayed in Targets list in Correct department.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/targets?page=1&per-page=10000>; rel=self",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self "
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Modify Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "110278a2-d04b-473c-8aa8-04b854da4957",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get mail to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"email_with_domain\", pm.response.json().email);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//get fullname to variable",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"fullName\", pm.response.json().fullName);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"first_name\", \"second_name\", \"email\", \"departmentId\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"first_name\": {\"type\": \"string\"},",
                          "        \"second_name\": {\"type\": \"string\"},",
                          "        \"third_name\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        \"departmentId\": {\"type\": \"integer\"},",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"integer\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"integer\"},",
                          "                \"lastChange\": {\"type\": \"integer\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        }",
                          "       ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedFirstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedSecondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedThirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "   ",
                          "});",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "618a2547-4df6-46fe-b140-2808d3eed9d6",
                        "type": "text/javascript",
                        "exec": [
                          "//get random modified first name",
                          "",
                          "var modified_first_name = \"\";",
                          "var modified_first_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_first_name += modified_first_name_charset.charAt(Math.floor(Math.random() * modified_first_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedFirstName\", modified_first_name);",
                          "",
                          "//get random modified second name",
                          "",
                          "var modified_second_name = \"\";",
                          "var modified_second_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_second_name += modified_second_name_charset.charAt(Math.floor(Math.random() * modified_second_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedSecondName\", modified_second_name);",
                          "",
                          "//get random modified third name",
                          "",
                          "var modified_third_name = \"\";",
                          "var modified_third_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_third_name += modified_third_name_charset.charAt(Math.floor(Math.random() * modified_third_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedThirdName\", modified_third_name);",
                          "",
                          "//get random modified email",
                          "",
                          "var modified_email_name = \"A.b.C.d\";",
                          "var modified_email_name_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_email_name += modified_email_name_charset.charAt(Math.floor(Math.random() * modified_email_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedEmail\", modified_email_name);",
                          "",
                          "//get random modified position",
                          "",
                          "var modified_position_name = \"Менеджер номер два \";",
                          "var modified_position_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_position_name += modified_position_name_charset.charAt(Math.floor(Math.random() * modified_position_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedPosition\", modified_position_name);",
                          "",
                          "//get random modified marks",
                          "",
                          "var modified_mark_name_1 = \"\";",
                          "var modified_mark_name_1_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 3; i++ ) {",
                          "    ",
                          "        modified_mark_name_1 += modified_mark_name_1_charset.charAt(Math.floor(Math.random() * modified_mark_name_1_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var modified_mark_name_2 = \"\";",
                          "var modified_mark_name_2_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 9; i++ ) {",
                          "    ",
                          "        modified_mark_name_2 += modified_mark_name_2_charset.charAt(Math.floor(Math.random() * modified_mark_name_2_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var modified_mark_name_3 = \"\";",
                          "var modified_mark_name_3_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 5; i++ ) {",
                          "    ",
                          "        modified_mark_name_3 += modified_mark_name_3_charset.charAt(Math.floor(Math.random() * modified_mark_name_3_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var modified_mark_name_4 = \"\";",
                          "var modified_mark_name_4_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 1; i++ ) {",
                          "    ",
                          "        modified_mark_name_4 += modified_mark_name_4_charset.charAt(Math.floor(Math.random() * modified_mark_name_4_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_1\", modified_mark_name_1);",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_2\", modified_mark_name_2);",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_3\", modified_mark_name_3);",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_4\", modified_mark_name_4);"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"id\":{{targetId}},\"first_name\":\"{{modifiedFirstName}}\",\"second_name\":\"{{modifiedSecondName}}\",\"third_name\":\"{{modifiedThirdName}}\",\"email\":\"{{modifiedEmail}}@antph.me\",\"status\":1,\"departmentId\":{{departmentId}},\"situation\":{\"status\":1,\"hasVulnerabilities\":false,\"education\":0,\"rating\":10,\"lastChange\":2,\"actions\":[]}}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2ca85e74-051d-4a25-b25c-87d8820004ca",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v1/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Education",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Send Target To All Education Courses",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "729b8dab-fe1b-4a3e-914f-be483fc5f14f",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"targets\":[{{targetId}}],\"courseId\":0}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/education",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "education"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Send Target To Random Education Course",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "c77a8192-f8d3-4079-bfe5-40ff4ded6c17",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "8c735a9c-7a53-4e17-aa52-b038c4c4a3fe",
                        "exec": [
                          "//get random course id",
                          "",
                          "var course_id = \"\";",
                          "var course_id_charset = \"5678\";",
                          "",
                          "course_id += course_id_charset.charAt(Math.floor(Math.random() * course_id_charset.length));",
                          "",
                          "postman.setEnvironmentVariable(\"courseId\", course_id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"targets\":[{{targetId}}],\"courseId\":{{courseId}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/education",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "education"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Training",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Start E-mail Attack",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "dc890330-c8b4-4800-83d8-f2cc62dee552",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get attack id to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"attackId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        ",
                          "        \"targets\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"integer\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"progress\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"total\": {\"type\": \"string\"},",
                          "                \"done\": {\"type\": \"string\"},",
                          "                \"error\": {\"type\": \"string\"},",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"targets\":[{{targetId}}]}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/attack",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "attack"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Started By Attack Task",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "17d41e73-c4cb-470c-9e45-8184d6875af6",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        ",
                          "        \"targets\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"integer\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"progress\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"total\": {\"type\": \"string\"},",
                          "                \"done\": {\"type\": \"string\"},",
                          "                \"error\": {\"type\": \"string\"},",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/tasks/{{attackId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "tasks",
                        "{{attackId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Directory",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Courses List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a8898604-8005-4389-a2c7-8eed7529e8d7",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/courses",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "courses"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Attachments List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6ce4ea8d-c430-4b00-8317-a41fab7c4728",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/attachments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "attachments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Final Pages List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0316547a-6593-4096-ad08-5f141a504910",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/final-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "final-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Phishing Pages List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c80cd37-2514-4aea-b2a8-ffe1f6dcacb3",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/phishing-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "phishing-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Templates List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1d82372c-53ef-4894-b812-a10b6b6d1f6d",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/templates",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "templates"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Antiphish v2",
      "item": [
        {
          "name": "Department",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "27bcce95-d509-4d69-b78b-bac26dccacd8",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get departmentId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"departmentId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"null\"},",
                          "        \"lastChange\": {\"type\": \"null\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"searchTargets\": {\"type\": \"integer\"},",
                          "        \"newTargets\": {\"type\": \"integer\"},",
                          "        \"failedTargets\": {\"type\": \"integer\"},",
                          "        \"vulnTargets\": {\"type\": \"integer\"}",
                          "        ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "7381ed0e-a556-4640-a7b6-f2671771240e",
                        "type": "text/javascript",
                        "exec": [
                          "//get random department name",
                          "",
                          "var department_name = \"Отдел \";",
                          "var department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        department_name += department_name_charset.charAt(Math.floor(Math.random() * department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"departmentName\", department_name);"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"name\": \"{{departmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/departments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Department after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "939c06f2-a21b-449c-8526-b302ff5c4a65",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentSchema = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "            \"id\": {\"type\": \"integer\"},",
                          "            \"name\": {\"type\": \"string\"},",
                          "            \"rating\": {\"type\": \"integer\"},",
                          "            \"lastChange\": {\"type\": \"integer\"},",
                          "            \"targetsCount\": {\"type\": \"integer\"},",
                          "            \"searchTargets\": {\"type\": \"integer\"},",
                          "            \"newTargets\": {\"type\": \"integer\"},",
                          "            \"failedTargets\": {\"type\": \"integer\"},",
                          "            \"vulnTargets\": {\"type\": \"integer\"}",
                          "        ",
                          "        }   ",
                          "    };",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentSchema);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "",
                          "pm.test(\"Department Name and ID are correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Departments",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "021f77e3-3643-499e-b79f-644ddb97cf96",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "pm.test(\"Department Name and ID are correct and displayed in Department's list.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/departments?page=1&per-page=10000>; rel=self",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Modify Department",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "fa03c2e9-1891-44c3-b72c-ed9689bdcfee",
                        "type": "text/javascript",
                        "exec": [
                          "//get random modified department name",
                          "",
                          "var modified_department_name = \"Отдел номер два с именем \";",
                          "var modified_department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_department_name += modified_department_name_charset.charAt(Math.floor(Math.random() * modified_department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedDepartmentName\", modified_department_name);"
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "63ed2433-251d-4d5d-8274-74060aacf0e4",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"integer\"},",
                          "        \"lastChange\": {\"type\": \"integer\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"searchTargets\": {\"type\": \"integer\"},",
                          "        \"newTargets\": {\"type\": \"integer\"},",
                          "        \"failedTargets\": {\"type\": \"integer\"},",
                          "        \"vulnTargets\": {\"type\": \"integer\"}",
                          "        ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedDepartmentName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"id\":{{departmentId}},\"name\":\"{{modifiedDepartmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "491fb9a0-c97f-484a-a5bc-a0d44082440c",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v2/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [
                {
                  "name": "AN-2752",
                  "item": [
                    {
                      "name": "Check department rating",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "cdf185a3-a962-4046-aaca-4db7831e6037",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "",
                              "pm.test(\"Test correct fields\", function () {",
                              "    pm.expect(\"negativRatingUp\" in pm.response.json()[0]).to.eql(true);",
                              "    pm.expect(\"negativRatingDown\" in pm.response.json()[0]).to.eql(true);",
                              "    pm.expect(\"positivRatingUp\" in pm.response.json()[0]).to.eql(true);",
                              "    pm.expect(\"positivRatingDown\" in pm.response.json()[0]).to.eql(true);",
                              "    pm.expect(\"hasNotChanged\" in pm.response.json()[0]).to.eql(true);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "HcGDuguoyfhNumAyqUL5ovfj1W15ge",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [],
                        "url": {
                          "raw": "{{url}}/v2/departments?page=1&per-page=10000>; rel=self&rating=1",
                          "host": [
                            "{{url}}"
                          ],
                          "path": [
                            "v2",
                            "departments"
                          ],
                          "query": [
                            {
                              "key": "page",
                              "value": "1"
                            },
                            {
                              "key": "per-page",
                              "value": "10000>; rel=self"
                            },
                            {
                              "key": "rating",
                              "value": "1"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Target",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "249bfe84-b854-4150-9de8-3b819769afd7",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get targetId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"targetId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"fullName\", \"firstName\", \"secondName\", \"email\", \"department\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"fullName\": {\"type\": \"string\"},",
                          "        \"firstName\": {\"type\": \"string\"},",
                          "        \"secondName\": {\"type\": \"string\"},",
                          "        \"thirdName\": {\"type\": \"string\"},",
                          "        \"position\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"null\"},",
                          "        \"department\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "              \"id\": {\"type\": \"integer\"},",
                          "              \"name\": {\"type\": \"string\"}",
                          "              ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"null\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"null\"},",
                          "                \"lastChange\": {\"type\": \"null\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"string\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"marks\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"position\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_1\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_2\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_3\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_4\"));",
                          "   ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "0525ff0c-d0ae-40f7-ac99-456898fd3c79",
                        "exec": [
                          "//get random first name",
                          "",
                          "var first_name = \"\";",
                          "var first_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "        first_name += first_name_charset.charAt(Math.floor(Math.random() * first_name_charset.length));",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"firstName\", first_name);",
                          "",
                          "//get random second name",
                          "",
                          "var second_name = \"\";",
                          "var second_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        second_name += second_name_charset.charAt(Math.floor(Math.random() * second_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"secondName\", second_name);",
                          "",
                          "//get random third name",
                          "",
                          "var third_name = \"\";",
                          "var third_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        third_name += third_name_charset.charAt(Math.floor(Math.random() * third_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"thirdName\", third_name);",
                          "",
                          "//get random email",
                          "",
                          "var email_name = \"A.b.C.d\";",
                          "var email_name_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        email_name += email_name_charset.charAt(Math.floor(Math.random() * email_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"email\", email_name);",
                          "",
                          "//get random position",
                          "",
                          "var position_name = \"Менеджер \";",
                          "var position_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        position_name += position_name_charset.charAt(Math.floor(Math.random() * position_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"position\", position_name);",
                          "",
                          "//get random marks",
                          "",
                          "var mark_name_1 = \"\";",
                          "var mark_name_1_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 3; i++ ) {",
                          "    ",
                          "        mark_name_1 += mark_name_1_charset.charAt(Math.floor(Math.random() * mark_name_1_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var mark_name_2 = \"\";",
                          "var mark_name_2_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 9; i++ ) {",
                          "    ",
                          "        mark_name_2 += mark_name_2_charset.charAt(Math.floor(Math.random() * mark_name_2_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var mark_name_3 = \"\";",
                          "var mark_name_3_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 5; i++ ) {",
                          "    ",
                          "        mark_name_3 += mark_name_3_charset.charAt(Math.floor(Math.random() * mark_name_3_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var mark_name_4 = \"\";",
                          "var mark_name_4_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 1; i++ ) {",
                          "    ",
                          "        mark_name_4 += mark_name_4_charset.charAt(Math.floor(Math.random() * mark_name_4_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"mark_name_1\", mark_name_1);",
                          "postman.setEnvironmentVariable(\"mark_name_2\", mark_name_2);",
                          "postman.setEnvironmentVariable(\"mark_name_3\", mark_name_3);",
                          "postman.setEnvironmentVariable(\"mark_name_4\", mark_name_4);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"fullName\":\"{{firstName}} {{secondName}} {{thirdName}}\",\"firstName\":\"{{firstName}}\",\"secondName\":\"{{secondName}}\",\"thirdName\":\"{{thirdName}}\",\"position\":\"{{position}}\",\"email\":\"{{email}}@antph.me\",\"department\":{\"id\":{{departmentId}},\"name\":\"{{departmentName}}\"},\"marks\":[\"{{mark_name_1}}\", \"{{mark_name_2}}\", \"{{mark_name_3}}\", \"{{mark_name_4}}\"]}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/targets",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Target after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "4784948e-ea23-4fe9-9e3a-d0a9ee259df8",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"fullName\", \"firstName\", \"secondName\", \"email\", \"department\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"fullName\": {\"type\": \"string\"},",
                          "        \"firstName\": {\"type\": \"string\"},",
                          "        \"secondName\": {\"type\": \"string\"},",
                          "        \"thirdName\": {\"type\": \"string\"},",
                          "        \"position\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        \"department\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "              \"id\": {\"type\": \"integer\"},",
                          "              \"name\": {\"type\": \"string\"}",
                          "              ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"integer\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"integer\"},",
                          "                \"lastChange\": {\"type\": \"integer\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"marks\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"position\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_1\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_2\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_3\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_4\"));",
                          "   ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Targets",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aa948c25-ea67-4082-b461-4416d5c1dec6",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, department, marks",
                          "",
                          "pm.test(\"Target is correct and displayed in Targets list in Correct department.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"position\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_1\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_2\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_3\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_4\"));",
                          "   ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/targets?page=1&per-page=10000>; rel=self",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d763e9b5-3080-46a3-b35a-fb8780def4d1",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v2/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Email-attack",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create E-mail Attack",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "796d57dc-0a0c-4d0d-a861-bbaf7416c02f",
                        "type": "text/javascript",
                        "exec": [
                          "//get random attack name",
                          "",
                          "var attack_name = \"\";",
                          "var attack_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        attack_name += attack_name_charset.charAt(Math.floor(Math.random() * attack_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"attackName\", attack_name);",
                          "",
                          "//get random subject",
                          "",
                          "var subject_name = \"\";",
                          "var subject_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        subject_name += subject_name_charset.charAt(Math.floor(Math.random() * subject_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"subjectName\", subject_name);",
                          "",
                          "//get random sender",
                          "",
                          "var sender_name = \"\";",
                          "var sender_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        sender_name += sender_name_charset.charAt(Math.floor(Math.random() * sender_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"senderName\", sender_name);",
                          "",
                          "//get random sender email",
                          "",
                          "var sender_email = \"\";",
                          "var sender_email_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        sender_email += sender_email_charset.charAt(Math.floor(Math.random() * sender_email_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"senderEmail\", sender_email);",
                          "",
                          "//get random email text",
                          "",
                          "var email_text = \"{first_name} {second_name} \";",
                          "var email_text_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 1000; i++ ) {",
                          "    ",
                          "        email_text += email_text_charset.charAt(Math.floor(Math.random() * email_text_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"emailText\", email_text);"
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "c057c18c-6df2-4356-988a-658c916a3d65",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get attack id domain to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"attackId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//get email domain to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"emailDomain\", pm.response.json().domain);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\", \"subject\", \"fromName\", \"from\", \"domain\", \"text\", \"targetsCount\", \"selectedTargets\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"fromScheduler\": {\"type\": \"null\"},",
                          "        \"subject\": {\"type\": \"string\"},",
                          "        \"fromName\": {\"type\": \"string\"},",
                          "        \"from\": {\"type\": \"string\"},",
                          "        \"domain\": {\"type\": \"string\"},",
                          "        \"domainInLinks\": {\"type\": \"null\"},",
                          "        \"text\": {\"type\": \"string\"},",
                          "        \"state\": {\"type\": \"integer\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"sendAttachment\": {\"type\": \"boolean\"},",
                          "        \"attachment\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"name\": {\"type\": \"string\"},",
                          "                \"type\": {\"type\": \"string\"},",
                          "                \"filename\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"attachmentFakeName\": {\"type\": \"null\"},",
                          "        \"attachmentActions\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"phishingPage\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"title\": {\"type\": \"string\"},",
                          "                \"subdomain\": {\"type\": \"string\"},",
                          "                \"template\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"finalPage\": {\"type\": \"null\"},",
                          "        \"template\": {\"type\": \"null\"},",
                          "        \"selectedTargets\": {",
                          "        ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"object\"}",
                          "            ",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"subjectName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderEmail\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailDomain\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailText\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"name\":\"{{attackName}}\",\"subject\":\"{{subjectName}}\",\"fromName\":\"{{senderName}}\",\"from\":\"{{senderEmail}}\",\"domain\":\"antiphish.ru\",\"domainInLinks\":null,\"text\":\"<p>{{emailText}}</p>\",\"targetsCount\":null,\"sendAttachment\":true,\"attachment\":{\"id\":22,\"name\":\"blank\",\"type\":\"xlsx\"},\"attachmentFakeName\":null,\"phishingPage\":{\"id\":3,\"title\":\"Аутенфикация Atlassian JIRA\"},\"finalPage\":null,\"template\":null,\"selectedData\":{\"targets\":{\"{{departmentId}}\":[{{targetId}}]}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About E-mail Attack after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "05bf2acc-f64a-4ecd-b279-0815b8b65e16",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\", \"subject\", \"fromName\", \"from\", \"domain\", \"text\", \"targetsCount\", \"selectedTargets\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"fromScheduler\": {\"type\": \"null\"},",
                          "        \"subject\": {\"type\": \"string\"},",
                          "        \"fromName\": {\"type\": \"string\"},",
                          "        \"from\": {\"type\": \"string\"},",
                          "        \"domain\": {\"type\": \"string\"},",
                          "        \"domainInLinks\": {\"type\": \"null\"},",
                          "        \"text\": {\"type\": \"string\"},",
                          "        \"state\": {\"type\": \"integer\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"sendAttachment\": {\"type\": \"integer\"},",
                          "        \"attachment\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"name\": {\"type\": \"string\"},",
                          "                \"type\": {\"type\": \"string\"},",
                          "                \"filename\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"attachmentFakeName\": {\"type\": \"null\"},",
                          "        \"attachmentActions\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"phishingPage\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"title\": {\"type\": \"string\"},",
                          "                \"subdomain\": {\"type\": \"string\"},",
                          "                \"template\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"finalPage\": {\"type\": \"null\"},",
                          "        \"template\": {\"type\": \"null\"},",
                          "        \"selectedTargets\": {",
                          "        ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"object\"}",
                          "            ",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check attack name, subject, sender, sender email, sender domain, email text, department id, target id",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"subjectName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderEmail\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailDomain\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailText\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Email-Attacks",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "785f543e-d20e-41f8-b022-b48b973862db",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//check attack name, subject, sender, sender email, sender domain, email text, department id, target id",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/campaigns",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete E-mail Attack without Statistic",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "cf35a2d0-e4b2-4a4d-a55b-2b7a31dbf86e",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/delete?deleteStatistics=0",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "delete"
                      ],
                      "query": [
                        {
                          "key": "deleteStatistics",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Restore E-mail Attack",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/restore",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "restore"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete E-mail Attack with Statistic",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0a5b3568-88fc-471d-8e36-5d0db2502647",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/delete?deleteStatistics=1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "delete"
                      ],
                      "query": [
                        {
                          "key": "deleteStatistics",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Scheduler",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Reports Types",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3f9b9925-6aa5-4fa0-b76c-83685ae4c0d6",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks/report-types",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks",
                        "report-types"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of  Scheduler Triggers",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ece0bceb-a994-40f6-a678-73f161ce8b83",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks/trigger-types",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks",
                        "trigger-types"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Scheduler Actions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bf175b36-a63a-4b0a-9e4b-da1a92be28c7",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks/action-types",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks",
                        "action-types"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Scheduler Tasks",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6954334d-007f-4ddd-9ba2-f11fc8393831",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "USB-attack",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of USB-Attacks",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "aefa52ff-5486-4058-98cc-7e8f08b9f8a3",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/usb-attacks",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "usb-attacks"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Education",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Send Target To Random Education Course",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "729b8dab-fe1b-4a3e-914f-be483fc5f14f",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "493b4fee-e0ee-454d-bdac-f0887e77488c",
                        "exec": [
                          "//get random course id",
                          "",
                          "var course_id = \"\";",
                          "var course_id_charset = \"141516\";",
                          "",
                          "course_id += course_id_charset.charAt(Math.floor(Math.random() * course_id_charset.length));",
                          "",
                          "postman.setEnvironmentVariable(\"courseId\", course_id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"courseId\":{{courseId}},\"selectedData\":{\"targets\":{\"{{departmentId}}\":[{{targetId}}]}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/learning/sendToTraining",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "learning",
                        "sendToTraining"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Send Target To All Education Courses",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "729b8dab-fe1b-4a3e-914f-be483fc5f14f",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"courseId\":0,\"selectedData\":{\"targets\":{\"{{departmentId}}\":[{{targetId}}]}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/learning/sendToTraining",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "learning",
                        "sendToTraining"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Learning System",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1f4049b3-3b2b-4ad3-aed3-7503849d5e4c",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/learning",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "learning"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Education Courses",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "129bdf3b-bb6f-4ac1-8c95-1d58fda33a1f",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/courses",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "courses"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Education Notifications",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "cbb8dfac-11f5-44a1-b287-765c7900efd4",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/notifications",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "notifications"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Training",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Start E-mail Attack",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d1bb26c5-1189-480c-ac72-7562ebeb5437",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/start",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "start"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Pause E-mail Attack",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d089e12c-2b33-4140-92ef-9f0bc936d757",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/pause",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "pause"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Risks",
          "item": [
            {
              "name": "List of Software Risks",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "776e5e0d-7da9-4040-90bf-c41290cb6543",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function() {",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/v2/risks/software",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "risks",
                    "software"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Directory",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Sender Domains",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "816ce74c-da11-46c0-b758-3010ff44d14b",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/sender-domains",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "sender-domains"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Phishing Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "139f435c-6f46-43b1-b641-d88d368336c6",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/phishing-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "phishing-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Final Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d65f8fa2-9d15-49a9-a5aa-7705462385d8",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/final-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "final-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Templates",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "300394ed-c1a1-4409-b3d0-07cf65e8e143",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/templates",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "templates"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Info About Template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/templates/1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "templates",
                        "1"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Settings",
          "item": [
            {
              "name": "Client Authentication",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "2e9ba720-fb18-442b-b943-279676987e3d",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200.\", function () {",
                      "",
                      "    pm.response.to.have.status(200);",
                      "    ",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function(){",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});",
                      "",
                      "//client properties check",
                      "",
                      "var clientScheme = {",
                      "    ",
                      "    \"type\": \"object\",",
                      "    ",
                      "    \"properties\": {",
                      "        ",
                      "        \"license\": {",
                      "            ",
                      "            \"type\": \"object\",",
                      "            \"properties\": {",
                      "                ",
                      "                \"features\": {",
                      "                    ",
                      "                    \"type\": \"object\",",
                      "                    \"properties\": {",
                      "                        ",
                      "                        \"senderDomain\": {\"type\": \"boolean\"},",
                      "                        ",
                      "                    },",
                      "                    ",
                      "                    \"isValid\": {\"type\": \"boolean\"},",
                      "                    \"isExpired\": {\"type\": \"boolean\"},",
                      "                    \"expireSoon\": {\"type\": \"boolean\"},",
                      "                    \"domain\": {\"type\": \"string\"},",
                      "                    \"validTill\": {\"type\": \"string\"},",
                      "                    \"employeeCount\": {\"type\": \"string\"},",
                      "                    \"outInfectedUrl\": {\"type\": \"string\"},",
                      "                    ",
                      "                },",
                      "                ",
                      "                 \"targetImport\": {",
                      "                    ",
                      "                    \"type\": \"object\",",
                      "                    \"properties\": {",
                      "                        ",
                      "                        \"xlsxLimit\": {\"type\": \"integer\"},",
                      "                        \"ldapLimit\": {\"type\": \"integer\"},",
                      "                        ",
                      "                    },",
                      "                    ",
                      "                },",
                      "                ",
                      "                \"username\": {\"type\": \"string\"},",
                      "                \"companyName\": {\"type\": \"string\"},",
                      "                \"email\": {\"type\": \"string\"},",
                      "                \"phone\": {\"type\": \"string\"},",
                      "                \"fullName\": {\"type\": \"string\"},",
                      "                \"targetCount\": {\"type\": \"string\"},",
                      "                \"department\": {\"type\": \"string\"},",
                      "                \"position\": {\"type\": \"string\"},",
                      "                ",
                      "            },",
                      "            ",
                      "        },",
                      "        ",
                      "    },",
                      "    ",
                      "};",
                      "",
                      "var client = JSON.parse(responseBody);",
                      "",
                      "pm.test (\"Client properties are correct.\", function() {",
                      "    ",
                      "    var SchemeIsCorrect = tv4.validate(client, clientScheme);",
                      "        ",
                      "    pm.expect(SchemeIsCorrect).to.be.true;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"password\":\"{{userPassword}}\",\"username\":\"{{userLogin}}\"}"
                },
                "url": {
                  "raw": "{{url}}/v2/auth",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "auth"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "List of LDAP-profiles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "44ea3579-3061-430d-b50a-952eceaeadcb",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function() {",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/v2/ldap-profiles",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "ldap-profiles"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "List of Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "931ddfcd-7b43-4695-a0ff-4c63245e6dbb",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function() {",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/v2/settings",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "settings"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Manage",
      "item": [
        {
          "name": "Roles",
          "item": [
            {
              "name": "tests",
              "item": [
                {
                  "name": "AN-995",
                  "item": [
                    {
                      "name": "Create role",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "d2e90c25-31da-4b7d-aaa2-9342297dee74",
                            "exec": [
                              "//status check",
                              "pm.test(\"Status code is 201.\", function () {",
                              "    pm.response.to.have.status(201);",
                              "});",
                              "//response content-type check",
                              "pm.test(\"Response is json.\", function() {",
                              "    pm.response.to.be.json;",
                              "});",
                              "//get id to variable",
                              "try {",
                              "    pm.environment.set(\"roleId\", pm.response.json().id);",
                              "} catch(e) {",
                              "    console.log(e);",
                              "}",
                              "// properties check",
                              "var scheme = {",
                              "    \"type\": \"object\",",
                              "    \"required\" : [\"id\", \"name\", \"page\"],",
                              "    \"properties\": {",
                              "        \"id\": {\"type\": \"integer\"},",
                              "        \"name\": {\"type\": \"string\"},",
                              "        \"page\": {\"type\": \"string\"},",
                              "        \"status\": {\"type\": \"integer\"},",
                              "        \"default\": {\"type\": \"integer\"},",
                              "        \"access\": {\"type\": \"integer\"},",
                              "        \"sections\": {\"type\": \"array\"},",
                              "    }   ",
                              "};",
                              "var object = JSON.parse(responseBody);",
                              "pm.test (\"Role properties are correct.\", function() {",
                              "    var schemeIsCorrect = tv4.validate(object, scheme);",
                              "    pm.expect(schemeIsCorrect).to.be.true;",
                              "});",
                              "//check name",
                              "pm.test(\"Role name is correct.\", function(){",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleName\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "2a771832-b0d4-4864-89a4-f1a876da6aab",
                            "exec": [
                              "//get random name",
                              "var roleName = \"Роль \";",
                              "var roleNameCharset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                              "for( var i=0; i < 15; i++ ) {",
                              "    roleName += roleNameCharset.charAt(Math.floor(Math.random() * roleNameCharset.length));",
                              "}",
                              "postman.setEnvironmentVariable(\"roleName\", roleName);"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{manageToken}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\"name\": \"{{roleName}}\", \"page\": \"managers\"}"
                        },
                        "url": {
                          "raw": "{{manageUrl}}/v1/roles",
                          "host": [
                            "{{manageUrl}}"
                          ],
                          "path": [
                            "v1",
                            "roles"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Info about role after creation",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "9dbb3e55-a91e-4d91-814e-d71be3438cf1",
                            "exec": [
                              "//status check",
                              "pm.test(\"Status code is 200\", function() {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "//response content-type check",
                              "pm.test(\"Response is json.\", function() {",
                              "    pm.response.to.be.json;",
                              "});",
                              "// properties check",
                              "var schema = {",
                              "    \"type\": \"object\",",
                              "    \"required\": [\"id\", \"name\", \"page\"],",
                              "    \"properties\": {",
                              "        \"id\": {\"type\": \"integer\"},",
                              "        \"name\": {\"type\": \"string\"},",
                              "        \"page\": {\"type\": \"string\"},",
                              "        \"status\": {\"type\": \"integer\"},",
                              "        \"default\": {\"type\": \"integer\"},",
                              "        \"access\": {\"type\": \"integer\"},",
                              "        \"sections\": {\"type\": \"array\"},",
                              "    }",
                              "};",
                              "var object = JSON.parse(responseBody);",
                              "pm.test(\"Role properties are correct.\", function() {",
                              "    var schemeIsCorrect = tv4.validate(object, schema);",
                              "    pm.expect(schemeIsCorrect).to.be.true;",
                              "});",
                              "// name and id check",
                              "pm.test(\"Role name and ID are correct.\", function() {",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleName\"));",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleId\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{manageToken}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json",
                            "type": "text"
                          }
                        ],
                        "url": {
                          "raw": "{{manageUrl}}/v1/roles/{{roleId}}",
                          "host": [
                            "{{manageUrl}}"
                          ],
                          "path": [
                            "v1",
                            "roles",
                            "{{roleId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "List of roles",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "50516cc3-7a75-4e48-9b7c-c6e552365590",
                            "exec": [
                              "//status check",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "//response content-type check",
                              "pm.test(\"Response is json.\", function() {",
                              "    pm.response.to.be.json;",
                              "});",
                              "// name and id check",
                              "pm.test(\"Role name and ID are correct and displayed in role's list.\", function(){",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleName\"));",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleId\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{manageToken}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{manageUrl}}/v1/roles?page=1&per-page=10000>; rel=self",
                          "host": [
                            "{{manageUrl}}"
                          ],
                          "path": [
                            "v1",
                            "roles"
                          ],
                          "query": [
                            {
                              "key": "page",
                              "value": "1"
                            },
                            {
                              "key": "per-page",
                              "value": "10000>; rel=self"
                            }
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Modify role",
                      "event": [
                        {
                          "listen": "prerequest",
                          "script": {
                            "id": "778f0b89-ed6b-48db-8e83-dc2918cd5154",
                            "exec": [
                              "//get random modified name",
                              "var modifiedRoleName = \"Роль номер два с именем \";",
                              "var modifiedRoleNameCharset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                              "",
                              "for( var i=0; i < 15; i++ ) {",
                              "    modifiedRoleName += modifiedRoleNameCharset.charAt(Math.floor(Math.random() * modifiedRoleNameCharset.length));",
                              "}",
                              "postman.setEnvironmentVariable(\"modifiedRoleName\", modifiedRoleName);"
                            ],
                            "type": "text/javascript"
                          }
                        },
                        {
                          "listen": "test",
                          "script": {
                            "id": "872fc928-162b-47ab-8b8c-2590f17e0211",
                            "exec": [
                              "//status check",
                              "pm.test(\"Status code is 200.\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "//response content-type check",
                              "pm.test(\"Response is json.\", function() {",
                              "    pm.response.to.be.json;",
                              "});",
                              "// properties check",
                              "var scheme = {",
                              "    \"type\": \"object\",",
                              "    \"required\" : [\"id\", \"name\", \"page\"],",
                              "    \"properties\": {",
                              "        \"id\": {\"type\": \"integer\"},",
                              "        \"name\": {\"type\": \"string\"},",
                              "        \"page\": {\"type\": \"string\"},",
                              "        \"status\": {\"type\": \"integer\"},",
                              "        \"default\": {\"type\": \"integer\"},",
                              "        \"access\": {\"type\": \"integer\"},",
                              "        \"sections\": {\"type\": \"array\"},",
                              "    }   ",
                              "};",
                              "var object = JSON.parse(responseBody);",
                              "pm.test (\"Role properties are correct.\", function() {",
                              "    var schemeIsCorrect = tv4.validate(object, scheme);",
                              "    pm.expect(schemeIsCorrect).to.be.true;",
                              "});",
                              "//check name",
                              "pm.test(\"Role name is correct.\", function(){",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedRoleName\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{manageToken}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "PUT",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "raw",
                          "raw": "{\"id\":{{roleId}},\"name\":\"{{modifiedRoleName}}\"}"
                        },
                        "url": {
                          "raw": "{{manageUrl}}/v1/roles/{{roleId}}",
                          "host": [
                            "{{manageUrl}}"
                          ],
                          "path": [
                            "v1",
                            "roles",
                            "{{roleId}}"
                          ]
                        }
                      },
                      "response": []
                    },
                    {
                      "name": "Delete role",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "a760236f-1ddf-4477-8f51-5d0d083112ac",
                            "exec": [
                              "//status check",
                              "pm.test(\"Status code is 204\", function () {",
                              "    pm.response.to.have.status(204);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{manageToken}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "DELETE",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "body": {
                          "mode": "formdata",
                          "formdata": []
                        },
                        "url": {
                          "raw": "{{manageUrl}}/v1/roles/{{roleId}}",
                          "host": [
                            "{{manageUrl}}"
                          ],
                          "path": [
                            "v1",
                            "roles",
                            "{{roleId}}"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "description": "Roles",
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "requests",
              "item": [
                {
                  "name": "AN-995",
                  "item": [
                    {
                      "name": "List of roles",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "172834ca-cc5a-4016-a0ca-31ea86176408",
                            "exec": [
                              "//status check",
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});",
                              "//response content-type check",
                              "pm.test(\"Response is json.\", function() {",
                              "    pm.response.to.be.json;",
                              "});",
                              "// name and id check",
                              "pm.test(\"Role name and ID are correct and displayed in role's list.\", function(){",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleName\"));",
                              "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"roleId\"));",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "bearer",
                          "bearer": [
                            {
                              "key": "token",
                              "value": "{{manageToken}}",
                              "type": "string"
                            }
                          ]
                        },
                        "method": "GET",
                        "header": [
                          {
                            "key": "Content-Type",
                            "value": "application/json"
                          }
                        ],
                        "url": {
                          "raw": "{{manageUrl}}/v1/roles?page=1&per-page=10000>; rel=self",
                          "host": [
                            "{{manageUrl}}"
                          ],
                          "path": [
                            "v1",
                            "roles"
                          ],
                          "query": [
                            {
                              "key": "page",
                              "value": "1"
                            },
                            {
                              "key": "per-page",
                              "value": "10000>; rel=self"
                            }
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Attachment",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Attachments",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ae135f16-64a8-49bb-8fd2-d8a90a329fca",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/attachments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "attachments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Attachment's information",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2221f7e8-a4a6-4b10-af34-0502d6d6e7c6",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/attachments/23",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "attachments",
                        "23"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Download Attachment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9c6f1d4c-6667-4b78-8d68-08aedcc5b66d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/attachments/23/download",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "attachments",
                        "23",
                        "download"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Final Page",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Final Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "8a987357-4b80-4212-8b36-5c1b155069c8",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/final-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "final-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Final Page's informaton",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5c7a899e-3e60-47e0-8705-0759b357b63d",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/final-pages/1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "final-pages",
                        "1"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Phishing Page",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Phishing Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0d9a032e-924b-4219-942d-67d2eac0cf94",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "UY98oWxq5jPCI6m2ifVa",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/phishing-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "phishing-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Phishing Page's information",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f3024b28-ae1c-4b0b-a1fb-88d22af1d953",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/phishing-pages/1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "phishing-pages",
                        "1"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Email-attak template",
          "item": [
            {
              "name": "requests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "List of Templates",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "fff35163-0481-46a4-9802-117cb02cb7d2",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{url}}/manage/templates",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "manage",
                    "templates"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Template's information",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "9a8f8de1-6c53-44c0-8580-30a56e01c338",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{url}}/manage/templates/4",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "manage",
                    "templates",
                    "4"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    }
  ],
  "protocolProfileBehavior": {}
}