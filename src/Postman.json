{
  "info": {
    "_postman_id": "7bfa0d0c-0bb9-47dc-9a5a-ca9152a1a088",
    "name": "Antiphish copy",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "Antiphish v1",
      "item": [
        {
          "name": "Department",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Department",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "b6a27dce-fd83-4455-8ff8-01a884fd4082",
                        "exec": [
                          "//get random department name",
                          "",
                          "var department_name = \"Отдел \";",
                          "var department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        department_name += department_name_charset.charAt(Math.floor(Math.random() * department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"departmentName\", department_name);"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "c7d2b1d7-fd9d-420c-84c3-6bba5757c77f",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get departmentId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"departmentId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"null\"},",
                          "        \"lastChange\": {\"type\": \"null\"},",
                          "       ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"name\":\"{{departmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/departments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Department after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "0b4b718b-4b9f-47db-a36d-9c71614cbca0",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentSchema = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "            \"id\": {\"type\": \"integer\"},",
                          "            \"name\": {\"type\": \"string\"},",
                          "            \"rating\": {\"type\": \"integer\"},",
                          "            \"lastChange\": {\"type\": \"integer\"},",
                          "            ",
                          "        }   ",
                          "    };",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentSchema);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "",
                          "pm.test(\"Department Name and ID are correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Departments",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6523af5d-2abb-4366-ac2f-bfcfcd37acc8",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "pm.test(\"Department Name and ID are correct and displayed in Department's list.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/departments?page=1&per-page=10000>; rel=self ",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self "
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Modify Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f5b595b1-498b-4911-ba05-21a0408f36f6",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"integer\"},",
                          "        \"lastChange\": {\"type\": \"integer\"},",
                          "        ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedDepartmentName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "13e18526-7529-4be9-8191-e12cffbf805c",
                        "type": "text/javascript",
                        "exec": [
                          "//get random modified department name",
                          "",
                          "var modified_department_name = \"Отдел номер два с именем \";",
                          "var modified_department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_department_name += modified_department_name_charset.charAt(Math.floor(Math.random() * modified_department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedDepartmentName\", modified_department_name);"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"id\":{{departmentId}},\"name\":\"{{modifiedDepartmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Deleting Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9a4c1ab8-14d9-407e-8575-0405944db288",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v1/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Target",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "34c78e15-a0a0-4143-a285-ac8518551368",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get targetId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"targetId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"first_name\", \"second_name\", \"email\", \"departmentId\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"first_name\": {\"type\": \"string\"},",
                          "        \"second_name\": {\"type\": \"string\"},",
                          "        \"third_name\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"null\"},",
                          "        \"departmentId\": {\"type\": \"integer\"},",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"null\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"null\"},",
                          "                \"lastChange\": {\"type\": \"null\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "  ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "99b3212b-551b-4678-9eb2-7daaff790a0f",
                        "exec": [
                          "//get random first name",
                          "var first_name = \"\";",
                          "var first_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        first_name += first_name_charset.charAt(Math.floor(Math.random() * first_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"firstName\", first_name);",
                          "",
                          "//get random second name",
                          "var second_name = \"\";",
                          "var second_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        second_name += second_name_charset.charAt(Math.floor(Math.random() * second_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"secondName\", second_name);",
                          "",
                          "//get random third name",
                          "var third_name = \"\";",
                          "var third_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        third_name += third_name_charset.charAt(Math.floor(Math.random() * third_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"thirdName\", third_name);",
                          "",
                          "//get random email",
                          "var email_name = \"A.b.C.d\";",
                          "var email_name_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        email_name += email_name_charset.charAt(Math.floor(Math.random() * email_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"email\", email_name);",
                          "",
                          "",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"first_name\":\"{{firstName}}\",\"second_name\":\"{{secondName}}\",\"third_name\":\"{{thirdName}}\",\"email\":\"{{email}}@antph.me\",\"status\":0,\"departmentId\":{{departmentId}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/targets",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info about Target after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f9435047-73d8-4bed-ab4c-d4a8f8aecfee",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"first_name\", \"second_name\", \"email\", \"departmentId\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"first_name\": {\"type\": \"string\"},",
                          "        \"second_name\": {\"type\": \"string\"},",
                          "        \"third_name\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        \"departmentId\": {\"type\": \"integer\"},",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"integer\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"integer\"},",
                          "                \"lastChange\": {\"type\": \"integer\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "  ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Targets",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "48bbb788-645f-4d60-b464-04a531908ae5",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, department, marks",
                          "",
                          "pm.test(\"Target is correct and displayed in Targets list in Correct department.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/targets?page=1&per-page=10000>; rel=self ",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self "
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Modify Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d645261d-4904-44b9-8039-ea8db613aa4f",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get mail to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"email_with_domain\", pm.response.json().email);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//get fullname to variable",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"fullName\", pm.response.json().fullName);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"first_name\", \"second_name\", \"email\", \"departmentId\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"first_name\": {\"type\": \"string\"},",
                          "        \"second_name\": {\"type\": \"string\"},",
                          "        \"third_name\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        \"departmentId\": {\"type\": \"integer\"},",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"integer\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"integer\"},",
                          "                \"lastChange\": {\"type\": \"integer\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        }",
                          "       ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedFirstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedSecondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedThirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "   ",
                          "});",
                          ""
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e55ada0f-bac7-4591-ad75-0496382d215c",
                        "type": "text/javascript",
                        "exec": [
                          "//get random modified first name",
                          "",
                          "var modified_first_name = \"\";",
                          "var modified_first_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_first_name += modified_first_name_charset.charAt(Math.floor(Math.random() * modified_first_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedFirstName\", modified_first_name);",
                          "",
                          "//get random modified second name",
                          "",
                          "var modified_second_name = \"\";",
                          "var modified_second_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_second_name += modified_second_name_charset.charAt(Math.floor(Math.random() * modified_second_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedSecondName\", modified_second_name);",
                          "",
                          "//get random modified third name",
                          "",
                          "var modified_third_name = \"\";",
                          "var modified_third_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_third_name += modified_third_name_charset.charAt(Math.floor(Math.random() * modified_third_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedThirdName\", modified_third_name);",
                          "",
                          "//get random modified email",
                          "",
                          "var modified_email_name = \"A.b.C.d\";",
                          "var modified_email_name_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_email_name += modified_email_name_charset.charAt(Math.floor(Math.random() * modified_email_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedEmail\", modified_email_name);",
                          "",
                          "//get random modified position",
                          "",
                          "var modified_position_name = \"Менеджер номер два \";",
                          "var modified_position_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_position_name += modified_position_name_charset.charAt(Math.floor(Math.random() * modified_position_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedPosition\", modified_position_name);",
                          "",
                          "//get random modified marks",
                          "",
                          "var modified_mark_name_1 = \"\";",
                          "var modified_mark_name_1_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 3; i++ ) {",
                          "    ",
                          "        modified_mark_name_1 += modified_mark_name_1_charset.charAt(Math.floor(Math.random() * modified_mark_name_1_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var modified_mark_name_2 = \"\";",
                          "var modified_mark_name_2_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 9; i++ ) {",
                          "    ",
                          "        modified_mark_name_2 += modified_mark_name_2_charset.charAt(Math.floor(Math.random() * modified_mark_name_2_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var modified_mark_name_3 = \"\";",
                          "var modified_mark_name_3_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 5; i++ ) {",
                          "    ",
                          "        modified_mark_name_3 += modified_mark_name_3_charset.charAt(Math.floor(Math.random() * modified_mark_name_3_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var modified_mark_name_4 = \"\";",
                          "var modified_mark_name_4_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 1; i++ ) {",
                          "    ",
                          "        modified_mark_name_4 += modified_mark_name_4_charset.charAt(Math.floor(Math.random() * modified_mark_name_4_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_1\", modified_mark_name_1);",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_2\", modified_mark_name_2);",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_3\", modified_mark_name_3);",
                          "postman.setEnvironmentVariable(\"modifiedMark_name_4\", modified_mark_name_4);"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"id\":{{targetId}},\"first_name\":\"{{modifiedFirstName}}\",\"second_name\":\"{{modifiedSecondName}}\",\"third_name\":\"{{modifiedThirdName}}\",\"email\":\"{{modifiedEmail}}@antph.me\",\"status\":1,\"departmentId\":{{departmentId}},\"situation\":{\"status\":1,\"hasVulnerabilities\":false,\"education\":0,\"rating\":10,\"lastChange\":2,\"actions\":[]}}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b797bd7f-dfe9-44ee-bf2b-a14d1e386cd2",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v1/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Education",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Send Target To All Education Courses",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "311a1fc6-8e23-4eab-bc87-428c5e2c55fe",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"targets\":[{{targetId}}],\"courseId\":0}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/education",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "education"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Send Target To Random Education Course",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "693bdfd0-fb0f-4272-95c9-5bfcbc976f38",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "120d2bb7-5d9f-4f63-884f-3ebd54789426",
                        "exec": [
                          "//get random course id",
                          "",
                          "var course_id = \"\";",
                          "var course_id_charset = \"5678\";",
                          "",
                          "course_id += course_id_charset.charAt(Math.floor(Math.random() * course_id_charset.length));",
                          "",
                          "postman.setEnvironmentVariable(\"courseId\", course_id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"targets\":[{{targetId}}],\"courseId\":{{courseId}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/education",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "education"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Training",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Start E-mail Attack",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "f18e2dc5-504d-43ed-a24a-1ff578ff9e81",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get attack id to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"attackId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        ",
                          "        \"targets\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"integer\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"progress\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"total\": {\"type\": \"string\"},",
                          "                \"done\": {\"type\": \"string\"},",
                          "                \"error\": {\"type\": \"string\"},",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "{{token}}",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"targets\":[{{targetId}}]}"
                    },
                    "url": {
                      "raw": "{{url}}/v1/attack",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "attack"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Started By Attack Task",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9b6866e7-def8-4b1a-a393-d2468be2f17b",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        ",
                          "        \"targets\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"integer\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"progress\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"total\": {\"type\": \"string\"},",
                          "                \"done\": {\"type\": \"string\"},",
                          "                \"error\": {\"type\": \"string\"},",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/tasks/{{attackId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "tasks",
                        "{{attackId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Directory",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Courses List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b54a6afe-5adf-4525-a77f-c911ad22eac6",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/courses",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "courses"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Attachments List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "36c066ad-6201-4f91-8861-7cd09b2a3f7e",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/attachments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "attachments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Final Pages List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ab970245-f9f6-4a66-a27c-3f1ba8a34b45",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/final-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "final-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Phishing Pages List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "59428676-7d3b-41ba-b42a-b4a3b2b8d9fd",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/phishing-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "phishing-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Templates List",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7fe46090-bf07-4998-91c3-b3a180a7363b",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v1/templates",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v1",
                        "templates"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Antiphish v2",
      "item": [
        {
          "name": "Department",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ddb218a2-f221-4a05-a19f-cb280c4d5593",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get departmentId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"departmentId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"null\"},",
                          "        \"lastChange\": {\"type\": \"null\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"searchTargets\": {\"type\": \"integer\"},",
                          "        \"newTargets\": {\"type\": \"integer\"},",
                          "        \"failedTargets\": {\"type\": \"integer\"},",
                          "        \"vulnTargets\": {\"type\": \"integer\"}",
                          "        ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "d7ef5593-8e54-48a0-a244-61956bce12fe",
                        "type": "text/javascript",
                        "exec": [
                          "//get random department name",
                          "",
                          "var department_name = \"Отдел \";",
                          "var department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        department_name += department_name_charset.charAt(Math.floor(Math.random() * department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"departmentName\", department_name);"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"name\": \"{{departmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/departments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Department after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "70fee3f9-7cd6-4671-ab8a-6d7247330e8b",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentSchema = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "            \"id\": {\"type\": \"integer\"},",
                          "            \"name\": {\"type\": \"string\"},",
                          "            \"rating\": {\"type\": \"integer\"},",
                          "            \"lastChange\": {\"type\": \"integer\"},",
                          "            \"targetsCount\": {\"type\": \"integer\"},",
                          "            \"searchTargets\": {\"type\": \"integer\"},",
                          "            \"newTargets\": {\"type\": \"integer\"},",
                          "            \"failedTargets\": {\"type\": \"integer\"},",
                          "            \"vulnTargets\": {\"type\": \"integer\"}",
                          "        ",
                          "        }   ",
                          "    };",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentSchema);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "",
                          "pm.test(\"Department Name and ID are correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Departments",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1f4e20a8-356b-42a0-893f-7b2f0d2926b5",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department name and id check",
                          "pm.test(\"Department Name and ID are correct and displayed in Department's list.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/departments?page=1&per-page=10000>; rel=self",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Modify Department",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "3b33203f-acb2-4ca5-8225-7dffbc8d82fd",
                        "type": "text/javascript",
                        "exec": [
                          "//get random modified department name",
                          "",
                          "var modified_department_name = \"Отдел номер два с именем \";",
                          "var modified_department_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,./?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        modified_department_name += modified_department_name_charset.charAt(Math.floor(Math.random() * modified_department_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"modifiedDepartmentName\", modified_department_name);"
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "e45df896-8e5c-4faf-8efc-3997baa8add7",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//department properties check",
                          "",
                          "var departmentScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"rating\": {\"type\": \"integer\"},",
                          "        \"lastChange\": {\"type\": \"integer\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"searchTargets\": {\"type\": \"integer\"},",
                          "        \"newTargets\": {\"type\": \"integer\"},",
                          "        \"failedTargets\": {\"type\": \"integer\"},",
                          "        \"vulnTargets\": {\"type\": \"integer\"}",
                          "        ",
                          "    }   ",
                          "    ",
                          "};",
                          "",
                          "var department = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Department properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(department, departmentScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check department name",
                          "",
                          "pm.test(\"Department Name is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"modifiedDepartmentName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "PUT",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"id\":{{departmentId}},\"name\":\"{{modifiedDepartmentName}}\"}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Department",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "996a09b9-68ec-47bc-9116-7c061fa1c92e",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v2/departments/{{departmentId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "departments",
                        "{{departmentId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Target",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a56ab9b2-8be3-41c1-9011-d0baab98751d",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get targetId to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"targetId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"fullName\", \"firstName\", \"secondName\", \"email\", \"department\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"fullName\": {\"type\": \"string\"},",
                          "        \"firstName\": {\"type\": \"string\"},",
                          "        \"secondName\": {\"type\": \"string\"},",
                          "        \"thirdName\": {\"type\": \"string\"},",
                          "        \"position\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"null\"},",
                          "        \"department\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "              \"id\": {\"type\": \"integer\"},",
                          "              \"name\": {\"type\": \"string\"}",
                          "              ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"null\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"null\"},",
                          "                \"lastChange\": {\"type\": \"null\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"string\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"marks\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, email, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"position\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_1\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_2\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_3\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_4\"));",
                          "   ",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "e273fb53-b385-44cc-9775-bcb470046cd0",
                        "exec": [
                          "//get random first name",
                          "",
                          "var first_name = \"\";",
                          "var first_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "        first_name += first_name_charset.charAt(Math.floor(Math.random() * first_name_charset.length));",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"firstName\", first_name);",
                          "",
                          "//get random second name",
                          "",
                          "var second_name = \"\";",
                          "var second_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        second_name += second_name_charset.charAt(Math.floor(Math.random() * second_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"secondName\", second_name);",
                          "",
                          "//get random third name",
                          "",
                          "var third_name = \"\";",
                          "var third_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        third_name += third_name_charset.charAt(Math.floor(Math.random() * third_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"thirdName\", third_name);",
                          "",
                          "//get random email",
                          "",
                          "var email_name = \"A.b.C.d\";",
                          "var email_name_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        email_name += email_name_charset.charAt(Math.floor(Math.random() * email_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"email\", email_name);",
                          "",
                          "//get random position",
                          "",
                          "var position_name = \"Менеджер \";",
                          "var position_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        position_name += position_name_charset.charAt(Math.floor(Math.random() * position_name_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"position\", position_name);",
                          "",
                          "//get random marks",
                          "",
                          "var mark_name_1 = \"\";",
                          "var mark_name_1_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 3; i++ ) {",
                          "    ",
                          "        mark_name_1 += mark_name_1_charset.charAt(Math.floor(Math.random() * mark_name_1_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var mark_name_2 = \"\";",
                          "var mark_name_2_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 9; i++ ) {",
                          "    ",
                          "        mark_name_2 += mark_name_2_charset.charAt(Math.floor(Math.random() * mark_name_2_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var mark_name_3 = \"\";",
                          "var mark_name_3_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 5; i++ ) {",
                          "    ",
                          "        mark_name_3 += mark_name_3_charset.charAt(Math.floor(Math.random() * mark_name_3_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "var mark_name_4 = \"\";",
                          "var mark_name_4_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 1; i++ ) {",
                          "    ",
                          "        mark_name_4 += mark_name_4_charset.charAt(Math.floor(Math.random() * mark_name_4_charset.length));",
                          "    ",
                          "    }",
                          "",
                          "postman.setEnvironmentVariable(\"mark_name_1\", mark_name_1);",
                          "postman.setEnvironmentVariable(\"mark_name_2\", mark_name_2);",
                          "postman.setEnvironmentVariable(\"mark_name_3\", mark_name_3);",
                          "postman.setEnvironmentVariable(\"mark_name_4\", mark_name_4);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"fullName\":\"{{firstName}} {{secondName}} {{thirdName}}\",\"firstName\":\"{{firstName}}\",\"secondName\":\"{{secondName}}\",\"thirdName\":\"{{thirdName}}\",\"position\":\"{{position}}\",\"email\":\"{{email}}@antph.me\",\"department\":{\"id\":{{departmentId}},\"name\":\"{{departmentName}}\"},\"marks\":[\"{{mark_name_1}}\", \"{{mark_name_2}}\", \"{{mark_name_3}}\", \"{{mark_name_4}}\"]}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/targets",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About Target after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b7c7c70a-c2e9-4674-aa33-6d2dc7c98b50",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//target properties check",
                          "",
                          "var targetScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"fullName\", \"firstName\", \"secondName\", \"email\", \"department\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"fullName\": {\"type\": \"string\"},",
                          "        \"firstName\": {\"type\": \"string\"},",
                          "        \"secondName\": {\"type\": \"string\"},",
                          "        \"thirdName\": {\"type\": \"string\"},",
                          "        \"position\": {\"type\": \"string\"},",
                          "        \"email\": {\"type\": \"string\"},",
                          "        \"status\": {\"type\": \"integer\"},",
                          "        \"department\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "              \"id\": {\"type\": \"integer\"},",
                          "              \"name\": {\"type\": \"string\"}",
                          "              ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"situation\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"status\": {\"type\": \"integer\"},",
                          "                \"hasVulnerabilities\": {\"type\": \"boolean\"},",
                          "                \"education\": {\"type\": \"integer\"},",
                          "                \"rating\": {\"type\": \"integer\"},",
                          "                \"lastChange\": {\"type\": \"integer\"},",
                          "                \"actions\": {",
                          "                    ",
                          "                    \"type\": \"array\",",
                          "                    \"items\": {\"type\": \"integer\"}",
                          "                    ",
                          "                }",
                          "                ",
                          "            }",
                          "            ",
                          "        },",
                          "        ",
                          "        \"marks\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        }",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var target = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Target properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(target, targetScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, department, marks",
                          "",
                          "pm.test(\"Target is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"position\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_1\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_2\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_3\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_4\"));",
                          "   ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Targets",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b8086eca-3171-4021-9cc7-b6c4a374f8d7",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//check target fullName, firstName, secondName, thirdName, position, department, marks",
                          "",
                          "pm.test(\"Target is correct and displayed in Targets list in Correct department.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"firstName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"secondName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"thirdName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"position\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_1\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_2\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_3\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"mark_name_4\"));",
                          "   ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/targets?page=1&per-page=10000>; rel=self",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets"
                      ],
                      "query": [
                        {
                          "key": "page",
                          "value": "1"
                        },
                        {
                          "key": "per-page",
                          "value": "10000>; rel=self"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete Target",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d18c1c23-3a62-4fd7-bf97-792c121b15b3",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 204\", function () {",
                          "    ",
                          "    pm.response.to.have.status(204);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v2/targets/{{targetId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "targets",
                        "{{targetId}}"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Email-attack",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Create E-mail Attack",
                  "event": [
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "f051a2bc-69a2-4dfd-9a20-b53da71cf8af",
                        "type": "text/javascript",
                        "exec": [
                          "//get random attack name",
                          "",
                          "var attack_name = \"\";",
                          "var attack_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        attack_name += attack_name_charset.charAt(Math.floor(Math.random() * attack_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"attackName\", attack_name);",
                          "",
                          "//get random subject",
                          "",
                          "var subject_name = \"\";",
                          "var subject_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        subject_name += subject_name_charset.charAt(Math.floor(Math.random() * subject_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"subjectName\", subject_name);",
                          "",
                          "//get random sender",
                          "",
                          "var sender_name = \"\";",
                          "var sender_name_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        sender_name += sender_name_charset.charAt(Math.floor(Math.random() * sender_name_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"senderName\", sender_name);",
                          "",
                          "//get random sender email",
                          "",
                          "var sender_email = \"\";",
                          "var sender_email_charset = \"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789+-_\";",
                          "",
                          "    for( var i=0; i < 15; i++ ) {",
                          "    ",
                          "        sender_email += sender_email_charset.charAt(Math.floor(Math.random() * sender_email_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"senderEmail\", sender_email);",
                          "",
                          "//get random email text",
                          "",
                          "var email_text = \"{first_name} {second_name} \";",
                          "var email_text_charset = \"АБВГДЕЁЖЗИЙКЛМОПРТУФХЦЧШЩЪЫЬЭЮЯабвгеёжзийклмнопрстуфхцчшщъыьэюяABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789~`!@#$%^&*()_+-=;':,.<>/?\";",
                          "",
                          "    for( var i=0; i < 1000; i++ ) {",
                          "    ",
                          "        email_text += email_text_charset.charAt(Math.floor(Math.random() * email_text_charset.length));",
                          "    ",
                          "    }",
                          "    ",
                          "postman.setEnvironmentVariable(\"emailText\", email_text);"
                        ]
                      }
                    },
                    {
                      "listen": "test",
                      "script": {
                        "id": "c1238a25-7425-4a73-b790-5b1279694f04",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 201.\", function () {",
                          "",
                          "    pm.response.to.have.status(201);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//get attack id domain to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"attackId\", pm.response.json().id);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "//get email domain to variable",
                          "",
                          "try {",
                          "    ",
                          "    pm.environment.set(\"emailDomain\", pm.response.json().domain);",
                          "    ",
                          "} catch(e) {",
                          "    ",
                          "    console.log(e);",
                          "    ",
                          "}",
                          "",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\", \"subject\", \"fromName\", \"from\", \"domain\", \"text\", \"targetsCount\", \"selectedTargets\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"fromScheduler\": {\"type\": \"null\"},",
                          "        \"subject\": {\"type\": \"string\"},",
                          "        \"fromName\": {\"type\": \"string\"},",
                          "        \"from\": {\"type\": \"string\"},",
                          "        \"domain\": {\"type\": \"string\"},",
                          "        \"domainInLinks\": {\"type\": \"null\"},",
                          "        \"text\": {\"type\": \"string\"},",
                          "        \"state\": {\"type\": \"integer\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"sendAttachment\": {\"type\": \"boolean\"},",
                          "        \"attachment\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"name\": {\"type\": \"string\"},",
                          "                \"type\": {\"type\": \"string\"},",
                          "                \"filename\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"attachmentFakeName\": {\"type\": \"null\"},",
                          "        \"attachmentActions\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"phishingPage\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"title\": {\"type\": \"string\"},",
                          "                \"subdomain\": {\"type\": \"string\"},",
                          "                \"template\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"finalPage\": {\"type\": \"null\"},",
                          "        \"template\": {\"type\": \"null\"},",
                          "        \"selectedTargets\": {",
                          "        ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"object\"}",
                          "            ",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"subjectName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderEmail\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailDomain\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailText\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"name\":\"{{attackName}}\",\"subject\":\"{{subjectName}}\",\"fromName\":\"{{senderName}}\",\"from\":\"{{senderEmail}}\",\"domain\":\"antiphish.ru\",\"domainInLinks\":null,\"text\":\"<p>{{emailText}}</p>\",\"targetsCount\":null,\"sendAttachment\":true,\"attachment\":{\"id\":22,\"name\":\"blank\",\"type\":\"xlsx\"},\"attachmentFakeName\":null,\"phishingPage\":{\"id\":3,\"title\":\"Аутенфикация Atlassian JIRA\"},\"finalPage\":null,\"template\":null,\"selectedData\":{\"targets\":{\"{{departmentId}}\":[{{targetId}}]}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Info About E-mail Attack after Creation",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "abe9b634-332b-4662-8faa-50dd0a0e57cd",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//attack properties check",
                          "",
                          "var attackScheme = {",
                          "    ",
                          "    \"type\": \"object\",",
                          "    ",
                          "    \"required\" : [\"id\", \"name\", \"subject\", \"fromName\", \"from\", \"domain\", \"text\", \"targetsCount\", \"selectedTargets\"],",
                          "    ",
                          "    \"properties\": {",
                          "        ",
                          "        \"id\": {\"type\": \"integer\"},",
                          "        \"name\": {\"type\": \"string\"},",
                          "        \"fromScheduler\": {\"type\": \"null\"},",
                          "        \"subject\": {\"type\": \"string\"},",
                          "        \"fromName\": {\"type\": \"string\"},",
                          "        \"from\": {\"type\": \"string\"},",
                          "        \"domain\": {\"type\": \"string\"},",
                          "        \"domainInLinks\": {\"type\": \"null\"},",
                          "        \"text\": {\"type\": \"string\"},",
                          "        \"state\": {\"type\": \"integer\"},",
                          "        \"targetsCount\": {\"type\": \"integer\"},",
                          "        \"sendAttachment\": {\"type\": \"integer\"},",
                          "        \"attachment\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"name\": {\"type\": \"string\"},",
                          "                \"type\": {\"type\": \"string\"},",
                          "                \"filename\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"attachmentFakeName\": {\"type\": \"null\"},",
                          "        \"attachmentActions\": {",
                          "            ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"string\"}",
                          "            ",
                          "        },",
                          "        ",
                          "        \"phishingPage\": {",
                          "            ",
                          "            \"type\": \"object\",",
                          "            \"properties\": {",
                          "                ",
                          "                \"id\": {\"type\": \"integer\"},",
                          "                \"title\": {\"type\": \"string\"},",
                          "                \"subdomain\": {\"type\": \"string\"},",
                          "                \"template\": {\"type\": \"string\"}",
                          "                ",
                          "            }",
                          "        },",
                          "        ",
                          "        \"finalPage\": {\"type\": \"null\"},",
                          "        \"template\": {\"type\": \"null\"},",
                          "        \"selectedTargets\": {",
                          "        ",
                          "            \"type\": \"array\",",
                          "            \"items\": {\"type\": \"object\"}",
                          "            ",
                          "        },",
                          "        ",
                          "    }",
                          "    ",
                          "};",
                          "",
                          "var attack = JSON.parse(responseBody);",
                          "",
                          "pm.test (\"Attack properties are correct.\", function() {",
                          "    ",
                          "    var SchemeIsCorrect = tv4.validate(attack, attackScheme);",
                          "        ",
                          "    pm.expect(SchemeIsCorrect).to.be.true;",
                          "    ",
                          "});",
                          "",
                          "//check attack name, subject, sender, sender email, sender domain, email text, department id, target id",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"subjectName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderName\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"senderEmail\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailDomain\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"emailText\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"departmentId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"targetId\"));",
                          "",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Email-Attacks",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1613e8e7-05d9-46d1-ac65-b72cb2a6f8c7",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function(){",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});",
                          "",
                          "//check attack name, subject, sender, sender email, sender domain, email text, department id, target id",
                          "",
                          "pm.test(\"Attack is correct.\", function(){",
                          "    ",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackId\"));",
                          "    pm.expect(pm.response.text()).to.include(pm.variables.get(\"attackName\"));",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/campaigns",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete E-mail Attack without Statistic",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "43d4fc9e-af24-4dee-8fe2-51a6e8b67bb5",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/delete?deleteStatistics=0",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "delete"
                      ],
                      "query": [
                        {
                          "key": "deleteStatistics",
                          "value": "0"
                        }
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Restore E-mail Attack",
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/restore",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "restore"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Delete E-mail Attack with Statistic",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "2fe42ae5-e636-4bd9-b9f5-d81e12911ff2",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "DELETE",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "formdata",
                      "formdata": []
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/delete?deleteStatistics=1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "delete"
                      ],
                      "query": [
                        {
                          "key": "deleteStatistics",
                          "value": "1"
                        }
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Scheduler",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Reports Types",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "d1ec77cc-cdd8-4552-b201-d212792279f8",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks/report-types",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks",
                        "report-types"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of  Scheduler Triggers",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b3c6fffd-e8e6-46b6-b937-35c528577d88",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks/trigger-types",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks",
                        "trigger-types"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Scheduler Actions",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "97d8995f-fd1e-4a00-99ec-88ef70d7064d",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks/action-types",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks",
                        "action-types"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Scheduler Tasks",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "bd11bb12-a4f3-4f2d-8acf-fe1548e5caa2",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/scheduler-tasks",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "scheduler-tasks"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "USB-attack",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of USB-Attacks",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b302cf66-6eea-489b-8fe3-48a12065a3fa",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/usb-attacks",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "usb-attacks"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Education",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Send Target To Random Education Course",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "01f6c35a-c51e-469f-90ed-bec5f74b13f6",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    },
                    {
                      "listen": "prerequest",
                      "script": {
                        "id": "0ec4f3b6-89d8-4804-8f5a-b600c3c7eb93",
                        "exec": [
                          "//get random course id",
                          "",
                          "var course_id = \"\";",
                          "var course_id_charset = \"141516\";",
                          "",
                          "course_id += course_id_charset.charAt(Math.floor(Math.random() * course_id_charset.length));",
                          "",
                          "postman.setEnvironmentVariable(\"courseId\", course_id);"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"courseId\":{{courseId}},\"selectedData\":{\"targets\":{\"{{departmentId}}\":[{{targetId}}]}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/learning/sendToTraining",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "learning",
                        "sendToTraining"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Send Target To All Education Courses",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "711bed0d-7d25-40ed-96af-957a10e42943",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\"courseId\":0,\"selectedData\":{\"targets\":{\"{{departmentId}}\":[{{targetId}}]}}}"
                    },
                    "url": {
                      "raw": "{{url}}/v2/learning/sendToTraining",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "learning",
                        "sendToTraining"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Learning System",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "98bcd475-4852-45ce-bfae-9b8e4fc3899d",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/learning",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "learning"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Education Courses",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "08e160d6-3eb1-4b09-820a-77f0cbb96e13",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/courses",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "courses"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Education Notifications",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9b1bc096-adc6-4c1c-a6dd-10e56e6253b5",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/notifications",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "notifications"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Training",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Start E-mail Attack",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "6ccee7d7-1884-4c79-a351-f017d0dd84d0",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/start",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "start"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Pause E-mail Attack",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ac9218fb-6ec2-4593-908d-e0e7c41836ba",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200.\", function () {",
                          "    ",
                          "    pm.response.to.have.status(200);",
                          "    ",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      },
                      {
                        "key": "Content-Type",
                        "value": "application/json"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": ""
                    },
                    "url": {
                      "raw": "{{url}}/v2/campaigns/{{attackId}}/pause",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "campaigns",
                        "{{attackId}}",
                        "pause"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Risks",
          "item": [
            {
              "name": "List of Software Risks",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "ba182fa0-de12-47a7-81ac-4d6d69970952",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function() {",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/v2/risks/software",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "risks",
                    "software"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Directory",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Sender Domains",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "828ccf38-0990-43e4-afef-c9438940ffde",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/sender-domains",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "sender-domains"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Phishing Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "1241e49d-ecde-4326-98a9-7adbb54bb12f",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/phishing-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "phishing-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Final Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "9099d618-0c3a-40ad-8f35-990db44d02c8",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/final-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "final-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "List of Templates",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "806e936f-7b32-4fdc-997b-a935c519019e",
                        "type": "text/javascript",
                        "exec": [
                          "//status check",
                          "",
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          "//response content-type check",
                          "",
                          "pm.test(\"Response is json.\", function() {",
                          "    ",
                          "    pm.response.to.be.json;",
                          "    ",
                          "});"
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "noauth"
                    },
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/templates",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "templates"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Get Info About Template",
                  "request": {
                    "method": "GET",
                    "header": [
                      {
                        "key": "Authorization",
                        "value": "{{token}}",
                        "type": "text"
                      }
                    ],
                    "url": {
                      "raw": "{{url}}/v2/templates/1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "v2",
                        "templates",
                        "1"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Settings",
          "item": [
            {
              "name": "Client Authentication",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "048d93cc-6524-4589-94e3-62514656430a",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200.\", function () {",
                      "",
                      "    pm.response.to.have.status(200);",
                      "    ",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function(){",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});",
                      "",
                      "//client properties check",
                      "",
                      "var clientScheme = {",
                      "    ",
                      "    \"type\": \"object\",",
                      "    ",
                      "    \"properties\": {",
                      "        ",
                      "        \"license\": {",
                      "            ",
                      "            \"type\": \"object\",",
                      "            \"properties\": {",
                      "                ",
                      "                \"features\": {",
                      "                    ",
                      "                    \"type\": \"object\",",
                      "                    \"properties\": {",
                      "                        ",
                      "                        \"senderDomain\": {\"type\": \"boolean\"},",
                      "                        ",
                      "                    },",
                      "                    ",
                      "                    \"isValid\": {\"type\": \"boolean\"},",
                      "                    \"isExpired\": {\"type\": \"boolean\"},",
                      "                    \"expireSoon\": {\"type\": \"boolean\"},",
                      "                    \"domain\": {\"type\": \"string\"},",
                      "                    \"validTill\": {\"type\": \"string\"},",
                      "                    \"employeeCount\": {\"type\": \"string\"},",
                      "                    \"outInfectedUrl\": {\"type\": \"string\"},",
                      "                    ",
                      "                },",
                      "                ",
                      "                 \"targetImport\": {",
                      "                    ",
                      "                    \"type\": \"object\",",
                      "                    \"properties\": {",
                      "                        ",
                      "                        \"xlsxLimit\": {\"type\": \"integer\"},",
                      "                        \"ldapLimit\": {\"type\": \"integer\"},",
                      "                        ",
                      "                    },",
                      "                    ",
                      "                },",
                      "                ",
                      "                \"username\": {\"type\": \"string\"},",
                      "                \"companyName\": {\"type\": \"string\"},",
                      "                \"email\": {\"type\": \"string\"},",
                      "                \"phone\": {\"type\": \"string\"},",
                      "                \"fullName\": {\"type\": \"string\"},",
                      "                \"targetCount\": {\"type\": \"string\"},",
                      "                \"department\": {\"type\": \"string\"},",
                      "                \"position\": {\"type\": \"string\"},",
                      "                ",
                      "            },",
                      "            ",
                      "        },",
                      "        ",
                      "    },",
                      "    ",
                      "};",
                      "",
                      "var client = JSON.parse(responseBody);",
                      "",
                      "pm.test (\"Client properties are correct.\", function() {",
                      "    ",
                      "    var SchemeIsCorrect = tv4.validate(client, clientScheme);",
                      "        ",
                      "    pm.expect(SchemeIsCorrect).to.be.true;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "POST",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  },
                  {
                    "key": "Content-Type",
                    "value": "application/json"
                  }
                ],
                "body": {
                  "mode": "raw",
                  "raw": "{\"password\":\"{{userPassword}}\",\"username\":\"{{userLogin}}\"}"
                },
                "url": {
                  "raw": "{{url}}/v2/auth",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "auth"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "List of LDAP-profiles",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "30d78f1e-bccf-4bab-8dba-c3577a0c6ce3",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function() {",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/v2/ldap-profiles",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "ldap-profiles"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "List of Settings",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "e1296d80-6d86-4269-b287-6c3b4c9a1c19",
                    "type": "text/javascript",
                    "exec": [
                      "//status check",
                      "",
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      "",
                      "//response content-type check",
                      "",
                      "pm.test(\"Response is json.\", function() {",
                      "    ",
                      "    pm.response.to.be.json;",
                      "    ",
                      "});"
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "noauth"
                },
                "method": "GET",
                "header": [
                  {
                    "key": "Authorization",
                    "value": "{{token}}"
                  }
                ],
                "url": {
                  "raw": "{{url}}/v2/settings",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "v2",
                    "settings"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    },
    {
      "name": "Manage",
      "item": [
        {
          "name": "Attachment",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Attachments",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "ff5d4620-b23a-49fe-9b8c-c8df694c16ed",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/attachments",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "attachments"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Attachment's information",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "b246b0e7-09be-43c6-a8ce-64a633a0cd02",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/attachments/23",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "attachments",
                        "23"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Download Attachment",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "7248f94b-84ce-4541-aacb-a31818c83a90",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/attachments/23/download",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "attachments",
                        "23",
                        "download"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Final Page",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Final Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "a962ac10-e5bb-4bc6-a4d2-2945d5375db5",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          "",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/final-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "final-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Final Page's informaton",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "5bb9cc31-833d-4d06-afc4-9b4217ae9a46",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/final-pages/1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "final-pages",
                        "1"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Phishing Page",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "List of Phishing Pages",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "3575b9a4-162d-4b2b-a00f-dc6ae7af4621",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ],
                        "type": "text/javascript"
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "UY98oWxq5jPCI6m2ifVa",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/phishing-pages",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "phishing-pages"
                      ]
                    }
                  },
                  "response": []
                },
                {
                  "name": "Phishing Page's information",
                  "event": [
                    {
                      "listen": "test",
                      "script": {
                        "id": "98aff4b3-283c-4e6d-9712-29ce5617debd",
                        "type": "text/javascript",
                        "exec": [
                          "pm.test(\"Status code is 200\", function () {",
                          "    pm.response.to.have.status(200);",
                          "});",
                          ""
                        ]
                      }
                    }
                  ],
                  "request": {
                    "auth": {
                      "type": "bearer",
                      "bearer": [
                        {
                          "key": "token",
                          "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                          "type": "string"
                        }
                      ]
                    },
                    "method": "GET",
                    "header": [],
                    "url": {
                      "raw": "{{url}}/manage/phishing-pages/1",
                      "host": [
                        "{{url}}"
                      ],
                      "path": [
                        "manage",
                        "phishing-pages",
                        "1"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Email-attak template",
          "item": [
            {
              "name": "requests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "List of Templates",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "54ffc06a-feef-4e5b-ae08-5c431b89f740",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{url}}/manage/templates",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "manage",
                    "templates"
                  ]
                }
              },
              "response": []
            },
            {
              "name": "Template's information",
              "event": [
                {
                  "listen": "test",
                  "script": {
                    "id": "4d145db2-45c6-4c63-af88-5df544eb44c4",
                    "type": "text/javascript",
                    "exec": [
                      "pm.test(\"Status code is 200\", function () {",
                      "    pm.response.to.have.status(200);",
                      "});",
                      ""
                    ]
                  }
                }
              ],
              "request": {
                "auth": {
                  "type": "bearer",
                  "bearer": [
                    {
                      "key": "token",
                      "value": "6akCMjBHh2qcMHjwr1kkCzvUG3wYsiCJX",
                      "type": "string"
                    }
                  ]
                },
                "method": "GET",
                "header": [],
                "url": {
                  "raw": "{{url}}/manage/templates/4",
                  "host": [
                    "{{url}}"
                  ],
                  "path": [
                    "manage",
                    "templates",
                    "4"
                  ]
                }
              },
              "response": []
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        },
        {
          "name": "Debug",
          "item": [
            {
              "name": "requests",
              "item": [
                {
                  "name": "Download",
                  "request": {
                    "method": "POST",
                    "header": [
                      {
                        "key": "User-Agent",
                        "value": "Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:75.0) Gecko/20100101 Firefox/75.0"
                      },
                      {
                        "key": "Accept",
                        "value": "*/*"
                      },
                      {
                        "key": "Accept-Language",
                        "value": "en-US,en;q=0.5"
                      },
                      {
                        "key": "X-Csrf-Token",
                        "value": "emr-VCgUJY2VWm75cF4HeUiaIBMP2jq3KLf3fmi_Fbw7CMgjemFG6KMFQ8odNmIxeNhoRHayQOFR7acLEPVyhA=="
                      },
                      {
                        "key": "Enable-Session",
                        "value": "1"
                      },
                      {
                        "key": "Content-Type",
                        "value": "text/csv",
                        "disabled": true
                      },
                      {
                        "key": "Origin",
                        "value": "http://mng.local:8080"
                      },
                      {
                        "key": "Connection",
                        "value": "keep-alive"
                      },
                      {
                        "key": "Cookie",
                        "value": "PHPSESSID=p1f4cfm5k9qhagpbtteq29h6c9; instance=1; langCode=ru"
                      },
                      {
                        "key": "Pragma",
                        "value": "no-cache"
                      },
                      {
                        "key": "Cache-Control",
                        "value": "no-cache"
                      }
                    ],
                    "body": {
                      "mode": "raw",
                      "raw": "{\n    \"instances\": [\n        1,\n        2\n    ]\n}",
                      "options": {
                        "raw": {
                          "language": "json"
                        }
                      }
                    },
                    "url": {
                      "raw": "http://mng.local:8080/v1/debug/1,a/download",
                      "protocol": "http",
                      "host": [
                        "mng",
                        "local"
                      ],
                      "port": "8080",
                      "path": [
                        "v1",
                        "debug",
                        "1,a",
                        "download"
                      ]
                    }
                  },
                  "response": []
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            },
            {
              "name": "tests",
              "item": [
                {
                  "name": "AN-1336",
                  "item": [
                    {
                      "name": "Test status",
                      "event": [
                        {
                          "listen": "test",
                          "script": {
                            "id": "8bedc62e-3872-498d-a74e-ba730e3350a2",
                            "exec": [
                              "pm.test(\"Status code is 200\", function () {",
                              "    pm.response.to.have.status(200);",
                              "});"
                            ],
                            "type": "text/javascript"
                          }
                        }
                      ],
                      "request": {
                        "auth": {
                          "type": "noauth"
                        },
                        "method": "POST",
                        "header": [
                          {
                            "key": "X-Csrf-Token",
                            "value": "emr-VCgUJY2VWm75cF4HeUiaIBMP2jq3KLf3fmi_Fbw7CMgjemFG6KMFQ8odNmIxeNhoRHayQOFR7acLEPVyhA=="
                          },
                          {
                            "key": "Cookie",
                            "value": "PHPSESSID=p1f4cfm5k9qhagpbtteq29h6c9; instance=1; langCode=ru"
                          },
                          {
                            "key": "Cache-Control",
                            "value": "no-cache"
                          }
                        ],
                        "url": {
                          "raw": "{{url_manage}}/v1/debug/0,1/download",
                          "host": [
                            "{{url_manage}}"
                          ],
                          "path": [
                            "v1",
                            "debug",
                            "0,1",
                            "download"
                          ]
                        }
                      },
                      "response": []
                    }
                  ],
                  "protocolProfileBehavior": {},
                  "_postman_isSubFolder": true
                }
              ],
              "protocolProfileBehavior": {},
              "_postman_isSubFolder": true
            }
          ],
          "protocolProfileBehavior": {},
          "_postman_isSubFolder": true
        }
      ],
      "protocolProfileBehavior": {}
    }
  ],
  "protocolProfileBehavior": {}
}